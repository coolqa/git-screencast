0:00:00.740,0:00:02.540
После завершения установки

0:00:02.540,0:00:07.300
можно, в стартовом меню, увидеть новую группу [Git].

0:00:07.860,0:00:12.700
[Git Bash] и [Git CMD] это оболочки для работы с git из командной строки.

0:00:12.700,0:00:18.440
Git Bash это порт с unix версии bash, а Git CMD это обычная виндовая CMD.

0:00:18.440,0:00:21.420
И вот это [Git GUI] наконец, простенький графический интерфейс.

0:00:21.420,0:00:24.460
Нашим основным инструментом будет командная строка потому,

0:00:24.460,0:00:28.080
что именно командная строка дает доступ ко всем возможностям git.

0:00:28.080,0:00:32.480
Освоив командную строку вы в дальнейшем легко разбиретесь с любым графическим интерфейсом,

0:00:32.480,0:00:34.180
хоть с этим, хоть с другим.

0:00:34.180,0:00:37.400
Мы могли бы выбрать вот эту [Git CMD] или вот эту [Git Bash] опцию,

0:00:37.400,0:00:41.120
но в современной системе windows есть достаточно мощная другая оболочка,

0:00:41.120,0:00:43.000
которая называется PowerShell.

0:00:43.000,0:00:44.420
Вот я ее запустил.

0:00:44.420,0:00:49.020
Сейчас немножечко увеличу шрифт, чтобы нам было лучше видно происходящее.

0:00:50.640,0:00:55.660
Дальше для работы с git я поставлю один хороший модуль, который называется posh-git.

0:00:55.660,0:01:01.260
Он будет добавлять в командное приветствие информацию о текущем состоянии git и файлов проекта.

0:01:01.260,0:01:04.600
В принципе это не обязательно, но  на практике очень полезно.

0:01:04.600,0:01:08.100
Вот здесь находится его описание и инструкции по установке,

0:01:08.100,0:01:09.660
которые я сейчас выполню.

0:01:10.680,0:01:12.320
Для того чтобы его поставить,

0:01:12.320,0:01:16.660
запускаю команду Install-Module posh-git для текущего юзера [CurrentUser].

0:01:16.660,0:01:19.520
Да, я согласен установить NuGet,

0:01:20.100,0:01:22.720
также соглашаюсь на следующие вопросы.

0:01:23.120,0:01:26.500
И вот модуль поставлен давайте я его запущу.

0:01:26.500,0:01:29.560
Тут выскочила ошибка, система не дает мне такую возможность,

0:01:29.560,0:01:32.920
потому что текущая политика безопасности запрещает это.

0:01:32.920,0:01:36.760
Для того чтобы ее ослабить, запущу команду Set-ExecutionPolicy.

0:01:36.760,0:01:40.840
Мой выбор означает, что я разрешаю powershell запускать загруженные скрипты

0:01:40.840,0:01:43.920
в том случае, если они подписаны доверенной цифровой подписью.

0:01:43.920,0:01:47.480
Все, теперь запускаю еще раз, ну вот отлично.

0:01:47.480,0:01:51.400
Давайте забегу чуть-чуть вперед, создам директорию

0:01:53.420,0:01:55.480
и запущу в ней команду git init,

0:01:55.480,0:01:57.120
просто чтобы увидеть в действии.

0:01:57.120,0:01:58.120
Видите master,

0:01:58.120,0:02:00.440
это как раз информация от posh-git.

0:02:00.440,0:02:05.260
Для того чтобы при будущих запусках powershell автоматически этот модуль подключался,

0:02:05.260,0:02:07.080
запущу вот такую команду [Add-PoshGitToProfile].

0:02:07.080,0:02:09.260
На этом базовая инсталляция завершена.

0:02:09.260,0:02:13.080
Более подробно вы увидите ее в действие, если продолжить работать git,

0:02:13.080,0:02:15.940
а если вас интересуют дополнительные настройки,

0:02:15.940,0:02:18.540
то они, конечно же, есть на странице автора.

0:02:18.780,0:02:21.440
Тут так же можно увидеть уже некоторые примеры.

0:02:22.300,0:02:25.840
Если вы раньше не работали в командной строке, ничего страшного.

0:02:25.840,0:02:27.360
Принцип работы очень простой,

0:02:27.360,0:02:30.700
здесь слева — командное приветствие, вот текущая директория,

0:02:30.700,0:02:32.580
а правее мы набираем команды.

0:02:32.780,0:02:34.680
Некоторые из них мы уже видели,

0:02:34.680,0:02:41.820
например [cd] — сменить текущий каталог, точка [ . ] означает — текущий и в подкаталог project перейти.

0:02:41.820,0:02:45.200
Соответственно пришли отсюда [C:\Users\iliakan], вот сюда [C:\Users\iliakan\project].

0:02:45.400,0:02:48.080
mkdir создает новый пустой каталог,

0:02:48.980,0:02:53.500
команда ls выводит содержимое каталога, то есть список файлов.

0:02:53.780,0:02:56.920
В данном случае на самом деле здесь есть файлы, но они скрыты.

0:02:56.920,0:03:00.180
ls с флагом -hidden как раз их выведет.

0:03:00.460,0:03:02.180
Тут есть директория [.git]

0:03:02.180,0:03:04.700
она служебная, мы еще вернемся к ней позже.

0:03:04.700,0:03:07.120
Давайте теперь вернусь домашний каталог.

0:03:07.120,0:03:10.100
Домашний каталог — это users и мое имя [C:\Users\iliakan],

0:03:10.100,0:03:14.020
он используется настолько часто, что у него есть короткое обозначение — тильда [~].

0:03:14.020,0:03:18.540
Теперь использую команду mv, которая умеет переименовывать и переносить файлы.

0:03:18.540,0:03:22.020
Для того чтобы отправить каталог project на рабочий стол,

0:03:22.020,0:03:24.480
которому соответствует директория desktop.

0:03:25.020,0:03:27.140
Теперь, если сверну все окна,

0:03:27.140,0:03:29.520
то вот моя директория project.

0:03:29.520,0:03:32.860
Сейчас она пустая, потому что выключен показ скрытых файлов,

0:03:32.860,0:03:36.680
если его включу, виден тот же каталог .git.

0:03:36.680,0:03:39.760
И так, до этого мы смотрели настройку PowerShell,

0:03:39.760,0:03:42.500
но в дальнейшем, если будете продолжать просмотр скринкаста,

0:03:42.500,0:03:45.200
вы заметите, что я использую другую оболочку.

0:03:45.200,0:03:47.340
Дело в том, что я работу на macOS,

0:03:47.340,0:03:48.800
а там PowerShell нет.

0:03:48.800,0:03:51.300
Ближайший аналог моей оболочки, это Git bash,

0:03:51.300,0:03:53.040
которая ставится вместе с git.

0:03:53.040,0:03:55.220
Есть несколько способов её запустить

0:03:55.220,0:03:59.100
например отсюда или отсюда из стартового меню.

0:04:00.020,0:04:03.620
Либо, когда мы ставили git, то мы оставили включенной галочку,

0:04:03.620,0:04:06.720
которой добавляем в контекстное меню Git Bash Here.

0:04:07.440,0:04:10.360
Вот я запустил, открылась эта оболочка

0:04:10.360,0:04:14.020
и моя текущая директория как раз та, на который я нажал.

0:04:14.020,0:04:18.780
Соответственно вот здесь, в меню можно менять цвета, шрифты и так далее.

0:04:19.660,0:04:22.800
Напомним, что при установке у нас было окошко с выбором:

0:04:22.800,0:04:27.040
использовать  терминал, который идёт вместе с git или использовать встроенный виндовый.

0:04:27.040,0:04:28.780
И мы выбрали второй вариант,

0:04:28.780,0:04:32.840
этот выбор влияет на внешний вид оболочки которая идёт вместе с git.

0:04:32.840,0:04:36.400
Сейчас для сравнения, просто чтобы было понятно о чем речь,

0:04:36.400,0:04:39.640
я покажу, что было бы, если бы мы выбрали первый вариант.

0:04:40.420,0:04:43.700
Разница в общем-то мало заметна, но она есть.

0:04:43.700,0:04:45.340
Сделаю шрифт чуть побольше.

0:04:47.060,0:04:51.820
Как видите несколько отличаются цвета, меню настроек,

0:04:51.820,0:04:54.620
но это собственно все, на что влияет выбор терминала.

0:04:54.620,0:04:57.620
Внутри это абсолютно одна и та же git bash,

0:04:57.620,0:05:00.080
то есть оболочка, которая отличается от PowerShell,

0:05:00.080,0:05:02.380
в которой система команд совсем другая,

0:05:02.380,0:05:06.140
хотя некоторые самые базовые команды можно одинаково использовать и там и там.

0:05:06.140,0:05:11.600
Например, для того чтобы посмотреть список файлов каталоге я могу как и в powershell использовать ls,

0:05:11.600,0:05:15.060
но при этом, чтобы увидеть файлы имя которых начинаются с точки,

0:05:15.060,0:05:19.580
в нашем случае .git, мне понадобился флаг не -hidden, а -а.

0:05:20.000,0:05:22.120
Так как этот скринкаст в первую очередь о git,

0:05:22.120,0:05:26.140
то я постараюсь свести использование специфичных консольных команд до минимума.

0:05:26.140,0:05:28.940
Но тем не менее, если вы работаете в PowerShell

0:05:28.940,0:05:32.300
и что-то у вас не запускается, то имеет смысл попробовать gitbash,

0:05:32.300,0:05:34.180
может быть дело как раз в оболочке.

0:05:34.520,0:05:36.380
И в заключении добавлю,

0:05:36.380,0:05:38.860
что если вы, как многие пользователи windows,

0:05:38.860,0:05:42.500
не привыкли пользоваться командной строкой и предпочитаете интерфейсы,

0:05:42.500,0:05:46.480
то почти все современные редакторы имеют интеграцию с git,

0:05:46.480,0:05:51.840
то есть ежедневные задачи отлично решаются при помощи кнопок, мышки, комбинации клавиш.

0:05:51.840,0:05:55.000
Но командная строка нам нужна во-первых — для изучения git,

0:05:55.000,0:05:56.960
чтобы понимать, как что работает,

0:05:56.960,0:06:02.420
во-вторых — для доступа к тем возможностям git, которые через интерфейс реализованы неудобно

0:06:02.420,0:06:04.220
или же не реализованы вообще.

0:06:04.220,0:06:07.160
Поскольку команд в git очень и очень много.
