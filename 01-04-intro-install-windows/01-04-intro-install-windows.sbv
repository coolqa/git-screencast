0:00:00.680,0:00:04.060
Установка git под windows производится
вполне традиционно.

0:00:04.200,0:00:05.620
Мы заходим на сайт

0:00:06.420,0:00:07.880
и скачиваем git.

0:00:08.400,0:00:13.960
Загрузка стартует автоматически, в данном случае я скачиваю 64-битную версию git.

0:00:14.740,0:00:16.600
Запускаю установку.

0:00:16.800,0:00:19.800
И здесь, в принципе, можно все настройки оставить по умолчанию,

0:00:19.800,0:00:23.200
но цель этого скринкаста в том что бы вы понимали происходящее,

0:00:23.200,0:00:26.280
поэтому я скажу несколько слов о каждой настройке.

0:00:26.360,0:00:30.420
Если вам это не интересно и вы хотите побыстрее начать что-то делать с git,

0:00:30.420,0:00:33.340
тогда, вы можете пропустить это и перейти к следующему выпуску,

0:00:33.340,0:00:35.340
он, как раз сразу, после установки.

0:00:35.340,0:00:40.160
Вначале все просто, здесь, дополнительные иконки в быстрый запуск, на рабочий стол,

0:00:40.160,0:00:42.160
скорее всего, они вам не понадобятся.

0:00:42.160,0:00:45.943
Вот этот пункт задает создание новых элементов в контекстном меню,

0:00:45.943,0:00:47.720
которые появляется у директорий.

0:00:47.720,0:00:50.660
Позже мы увидим это в действии, сейчас оставим.

0:00:50.660,0:00:53.680
Git LFS это специальное расширение git,

0:00:53.680,0:00:56.060
предназначенное для работы с очень большими файлами.

0:00:56.060,0:00:58.920
Как уже говорилось, обычно при работе с git,

0:00:58.920,0:01:03.040
у каждого разработчика есть полная копия, локальная, истории проекта.

0:01:03.040,0:01:06.640
Но если в процессе разработки, в проекте сохранялись очень большие файлы,

0:01:06.640,0:01:09.720
например видео, какие-то исходники связанные с дизайном,

0:01:09.720,0:01:14.800
то Git LFS позволяет особым образом хранить такие файлы и скачивать только те, которые необходимы.

0:01:15.100,0:01:18.500
Нам, это в ближайшем времени не понадобится, но давайте оставим.

0:01:18.840,0:01:19.520
Здесь,

0:01:19.520,0:01:23.920
файлы, которые начинают с [.git], это
обычно всякие настройки для git,

0:01:23.920,0:01:27.980
пусть редактируются текстовым редактором по умолчанию, оставляем ассоциации.

0:01:28.380,0:01:28.920
Здесь,

0:01:28.920,0:01:34.220
вместе с git'ом идет порт с unix оболочки, которая называется bash.

0:01:34.540,0:01:36.420
Позже мы увидим ее в действии.

0:01:36.420,0:01:39.340
И здесь, все файлы которые с расширением [.sh]

0:01:39.340,0:01:41.320
будут запускать через bash,

0:01:41.320,0:01:45.100
можете отключить, можете оставить нам это в принципе не понадобится.

0:01:45.100,0:01:48.180
Последние, включить TrueType для
консольных окон,

0:01:48.180,0:01:51.320
эта настройка уже не имеет прямого отношения git'у,

0:01:51.320,0:01:55.200
ставить ее или не ставить зависит от ваших шрифтов и в общем-то, это дело вкуса.

0:01:55.200,0:01:56.660
Идем дальше.

0:01:56.660,0:02:00.240
Название Git для папки в стартовом меню оставляем как есть.

0:02:00.980,0:02:05.720
Здесь, git идет с большим набором вспомогательных утилит портированных с unix,

0:02:05.720,0:02:08.200
для поиска файлов, сортировки и так далее.

0:02:08.200,0:02:11.880
Здесь мы можем решить, что из этого добавлять в переменную PATH,

0:02:11.880,0:02:14.760
то есть, что будет запускаться на прямую из командной строки.

0:02:15.220,0:02:18.120
У нас три варианта:
первый — ничего,

0:02:18.220,0:02:22.400
второй вариант —  сам git и буквально несколько вспомогательных файлов,

0:02:22.400,0:02:26.300
и наконец третий вариант —  это сам git и все эти утилиты.

0:02:26.540,0:02:29.180
При этом, инсталлятор нас предупреждает,

0:02:29.180,0:02:32.800
что названия некоторых утилит, таких как, например, "find" и "sort"

0:02:32.800,0:02:36.020
совпадает со встроенными в windows, то есть может быть конфликт,

0:02:36.020,0:02:40.100
но с другой стороны, если вы понимаете что делаете и собираетесь этими утилитами пользоваться,

0:02:40.100,0:02:41.900
то этот вариант может вам подойти.

0:02:41.900,0:02:47.440
В нашем случае, мы остановимся на среднем варианте, потому что нам понадобится только git.

0:02:47.440,0:02:50.040
Но что касается дополнительных unix'овых утилит,

0:02:50.040,0:02:52.960
то вы тоже сможете их посмотреть, тоже сможете ими пользоваться,

0:02:52.960,0:02:56.420
они будут в каталоге git, просто они не будут добавлены в PATH.

0:02:56.420,0:02:57.880
Идем дальше,

0:02:57.880,0:03:01.380
вместе с git идет своя библиотека для сетевых запросов

0:03:01.380,0:03:06.200
и здесь можно выбрать способ проверки https сертификатов, которые она будет использовать.

0:03:06.200,0:03:09.960
Сверху это встроенный, а снизу интегрированы с windows.

0:03:09.960,0:03:12.180
Как правило, совершенно без разницы,

0:03:12.180,0:03:16.420
единственно если вы используете корпоративное окружение, у вас свои сертификаты,

0:03:16.420,0:03:18.880
то тогда, возможно, второй вариант может быть удобнее.

0:03:19.480,0:03:23.800
Следующее меню позволяет задать автоматическое преобразование переводов строк,

0:03:23.800,0:03:26.640
это может быть важно для кроссплатформенной разработки.

0:03:26.640,0:03:31.520
Каждому пункту соответствует определенное значение вот такой настройки конфигурации.

0:03:31.980,0:03:34.800
Более подробно, о том как она делается, зачем это,

0:03:34.800,0:03:39.380
я расскажу в одном из следующих выпусков, а пока просто оставим рекомендованный вариант.

0:03:40.320,0:03:43.040
Следующая опция касается Git Bash.

0:03:43.040,0:03:47.260
Это специальная оболочка для запуска git — порт с unix bash.

0:03:47.260,0:03:51.220
Позже мы увидим ее в действии и здесь мы можем выбрать терминал,

0:03:51.220,0:03:57.300
то есть иными словами, средства для отображения окон windows который она будет использовать.

0:03:57.300,0:04:00.500
От нашего выбора будет зависеть настраиваемость окон,

0:04:00.500,0:04:03.300
способы выбора шрифтов и так далее.

0:04:03.300,0:04:06.160
Когда-то, в windows родной терминал был очень плохой,

0:04:06.160,0:04:10.860
поэтому выбирали первый вариант, сейчас он уже более или менее, поэтому давайте выберем его.

0:04:11.080,0:04:12.860
И наконец последняя,

0:04:12.860,0:04:15.060
[Enable file system caching] кэширование в памяти,

0:04:15.060,0:04:17.480
хорошая штука для производительности, оставим.

0:04:17.660,0:04:20.800
[Git Credential Manager] обеспечивает интеграцию git

0:04:20.800,0:04:23.400
со встроенными в windows средствами авторизации.

0:04:23.400,0:04:24.880
Если его отключить,

0:04:24.880,0:04:27.620
то, к примеру, при работе с удалённым git по сети

0:04:27.620,0:04:30.580
логин и пароль при каждом запросе понадобится вводить заново

0:04:30.580,0:04:33.020
и ряд других средств авторизации перестанет работать,

0:04:33.020,0:04:34.960
поэтому обязательно оставляем включенным.

0:04:35.440,0:04:37.180
Ну и наконец последний пункт [Symbolic links],

0:04:37.180,0:04:39.840
включает поддержку git'ом символических ссылок,

0:04:39.840,0:04:42.220
которые работают на уровне NTFS,

0:04:42.220,0:04:44.420
если вы ими пользуетесь, то можете включить.

0:04:44.420,0:04:48.260
При этом могут понадобиться некоторые дополнительные настройки разрешений,

0:04:48.260,0:04:49.660
вот здесь описание [ссылка symbolic links].

0:04:49.660,0:04:52.460
Если вы ими не пользуетесь, то можно оставить выключенным.

0:04:52.460,0:04:55.340
В частности в этом скринкасте мы ими пользоваться не будем.

0:04:55.580,0:05:01.560
Мы подробно разобрали все опции, я жму установить и продолжим в следующем выпуске.
